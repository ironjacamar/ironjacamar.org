---
layout: default
title:  IronJacamar 2 / Common
description: IronJacamar 2 common module
---

%h1 IronJacamcar 2 / Common

%ul
  %li Only support the latest version of the metadata
  %li Richer model
  %li Metadata transformers

%h2 Only support the latest version of the metadata

We are only going to support the latest version of metadata models.

%p

This means that there will only 1 version that represent the standard metadata model (ra.xml), and
1 metadata model for the activation metadata.

%p

So

%p

%ul
  %li
    1..1 standard metadata: We will mark w/ a flag the version of parsed XML file. Obtained through
    %ul
      %li META-INF/ra.xml
      %li Connector annotations
    Fields not present in previous version and/or not specified will take defaults.  
  %li
    0..n activation metadata: Generated by parsing both ironjacamar.xml and -ra.xml files, having in fact same content
    %ul
      %li -ra.xml: Archive name will be obtained from the definition itself
      %li ironjacamar.xml: Archive name will be defined by the deployer chain


%h2 Richer model
 
We need a richer metadata model, containing not only the value of a field, but also other information, and able to handle standard operations.

%p

Requirements:

%p

%ul
  %li Extend an Attribute<? extends Object> generic class
  %li 'Name' containing the name of the attribute or element
  %li 'Value' is immutable
  %li 'Value' is always an Object subtype (String, Integer, Float....) and not a primitive type (int, float...)
  %li 'Value' must have a default
  %li 'Value' with "null" means container default
  %li 'Mandatory' defines if the attribute or element is mandatory
  %li Have an optional validator handler. We will have standard implementations (IntegerValidator, StringValidator, IntegerRangeValidator and so on), but of course a specific implementation can be specified for integration
  %li Have an optional error handler to permit better integration. Default implementation is just logging and rethrow exception, most likely incapsulated in our own exception

%p

Parser requirements:

%p

%ul
  %li Implement the XML parser SPI
  %li ParserFactory based on service activation, e.g. available parsers resolved at runtime
  %li Have a StAX based implementation for IronJacamar/Standalone and IronJacamar/Embedded

%p

The names of the attributes and elements must be centrally defined. A decorator pattern could be used in the parsing phase.

%h2 Metadata transformers

There must be transformers for older versions of the ironjacmar.xml and -ra.xml activation models.

%p

The transformer could be attached to the individual metadata model node. Ignore and reject cases must be handled.
